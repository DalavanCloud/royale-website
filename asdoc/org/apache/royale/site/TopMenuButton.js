/**
 * Generated by Apache Royale Compiler from org\apache\royale\site\TopMenuButton.as
 * org.apache.royale.site.TopMenuButton
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.royale.site.TopMenuButton');

goog.require('org.apache.royale.core.UIBase');



/**
 * Constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @extends {org.apache.royale.core.UIBase}
 */
org.apache.royale.site.TopMenuButton = function() {
  org.apache.royale.site.TopMenuButton.base(this, 'constructor');
  this.typeNames = "TopMenuButton";
};
goog.inherits(org.apache.royale.site.TopMenuButton, org.apache.royale.core.UIBase);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.site.TopMenuButton', org.apache.royale.site.TopMenuButton);


/**
 * @private
 * @type {string}
 */
org.apache.royale.site.TopMenuButton.prototype._htmlText;


/**
 * @private
 * @type {string}
 */
org.apache.royale.site.TopMenuButton.prototype._href;


/**
 * @asreturn The actual element to be parented.
 * @royaleignorecoercion org.apache.royale.core.WrappedHTMLElement
 * @royaleignorecoercion HTMLLIElement
 * @protected
 * @override
 */
org.apache.royale.site.TopMenuButton.prototype.createElement = function() {
  var /** @type {HTMLLIElement} */ li = document.createElement("li");
  this.element = li;
  return this.element;
};


/**
 * @royaleignorecoercion HTMLAnchorElement
 * @export
 * @override
 */
org.apache.royale.site.TopMenuButton.prototype.addedToParent = function() {
  org.apache.royale.site.TopMenuButton.superClass_.addedToParent.apply(this);
  var /** @type {HTMLAnchorElement} */ anchor = document.createElement("a");
  anchor.className = "TopMenuButtonContent";
  anchor.href = this.href;
  anchor.textContent = this.htmlText;
  this.element.appendChild(anchor);
};


org.apache.royale.site.TopMenuButton.prototype.get__htmlText = function() {
  return this._htmlText;
};


org.apache.royale.site.TopMenuButton.prototype.set__htmlText = function(value) {
  this._htmlText = value;
};


org.apache.royale.site.TopMenuButton.prototype.get__href = function() {
  return this._href;
};


org.apache.royale.site.TopMenuButton.prototype.set__href = function(value) {
  this._href = value;
};


Object.defineProperties(org.apache.royale.site.TopMenuButton.prototype, /** @lends {org.apache.royale.site.TopMenuButton.prototype} */ {
/**
  * @export
  * @type {string} */
htmlText: {
get: org.apache.royale.site.TopMenuButton.prototype.get__htmlText,
set: org.apache.royale.site.TopMenuButton.prototype.set__htmlText},
/**
  * @export
  * @type {string} */
href: {
get: org.apache.royale.site.TopMenuButton.prototype.get__href,
set: org.apache.royale.site.TopMenuButton.prototype.set__href}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.site.TopMenuButton.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TopMenuButton', qName: 'org.apache.royale.site.TopMenuButton', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.site.TopMenuButton.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'htmlText': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.site.TopMenuButton'},
        'href': { type: 'String', access: 'readwrite', declaredBy: 'org.apache.royale.site.TopMenuButton'}
      };
    },
    methods: function () {
      return {
        'TopMenuButton': { type: '', declaredBy: 'org.apache.royale.site.TopMenuButton'},
        'addedToParent': { type: 'void', declaredBy: 'org.apache.royale.site.TopMenuButton'}
      };
    },
    metadata: function () { return [  ]; }
  };
};