/**
 * Generated by Apache Royale Compiler from org\apache\royale\site\TopMenu.mxml
 * org.apache.royale.site.TopMenu
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.royale.site.TopMenu');

goog.require('org.apache.royale.site.TopMenuBase');
goog.require('org.apache.royale.site.TopMenuButton');



/**
 * @constructor
 * @extends {org.apache.royale.site.TopMenuBase}
 */
org.apache.royale.site.TopMenu = function() {
  org.apache.royale.site.TopMenu.base(this, 'constructor');
  
  /**
   * @private
   * @type {org.apache.royale.site.TopMenuButton}
   */
  this.$ID0_;
  
  /**
   * @private
   * @type {org.apache.royale.site.TopMenuButton}
   */
  this.$ID1_;
  
  /**
   * @private
   * @type {org.apache.royale.site.TopMenuButton}
   */
  this.$ID2_;
  
  /**
   * @private
   * @type {org.apache.royale.site.TopMenuButton}
   */
  this.$ID3_;
  
  /**
   * @private
   * @type {org.apache.royale.site.TopMenuButton}
   */
  this.$ID4_;
  
  /**
   * @private
   * @type {org.apache.royale.site.TopMenuButton}
   */
  this.$ID5_;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldd;
  
  /**
   * @private
   * @type {Array}
   */
  this.mxmldp;
};
goog.inherits(org.apache.royale.site.TopMenu, org.apache.royale.site.TopMenuBase);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.site.TopMenu', org.apache.royale.site.TopMenu);



Object.defineProperties(org.apache.royale.site.TopMenu.prototype, /** @lends {org.apache.royale.site.TopMenu.prototype} */ {
'MXMLDescriptor': {
    /** @this {org.apache.royale.site.TopMenu} */
    get: function() {
      {
        if (this.mxmldd == undefined)
        {
          /** @type {Array} */
          var arr = org.apache.royale.site.TopMenu.superClass_.get__MXMLDescriptor.apply(this);
          /** @type {Array} */
          var data = [
      org.apache.royale.site.TopMenuButton,
3,
'_id',
true,
'$ID0',
'href',
true,
'features.html',
'htmlText',
true,
'FEATURES',
0,
0,
null,
org.apache.royale.site.TopMenuButton,
3,
'_id',
true,
'$ID1',
'href',
true,
'tryitnow/index.html',
'htmlText',
true,
'TRY IT NOW',
0,
0,
null,
org.apache.royale.site.TopMenuButton,
3,
'_id',
true,
'$ID2',
'href',
true,
'download.html',
'htmlText',
true,
'DOWNLOAD',
0,
0,
null,
org.apache.royale.site.TopMenuButton,
3,
'_id',
true,
'$ID3',
'href',
true,
'documentation.html',
'htmlText',
true,
'DOCS',
0,
0,
null,
org.apache.royale.site.TopMenuButton,
3,
'_id',
true,
'$ID4',
'href',
true,
'blog.html',
'htmlText',
true,
'BLOG',
0,
0,
null,
org.apache.royale.site.TopMenuButton,
3,
'_id',
true,
'$ID5',
'href',
true,
'github.html',
'htmlText',
true,
'GITHUB',
0,
0,
null
      ];
        
          if (arr)
            this.mxmldd = arr.concat(data);
          else
            this.mxmldd = data;
        }
        return this.mxmldd;
      }
      }
    }
  });
  /**
   * Metadata
   *
   * @type {Object.<string, Array.<Object>>}
   */
  org.apache.royale.site.TopMenu.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'TopMenu', qName: 'org.apache.royale.site.TopMenu', kind: 'class'  }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.site.TopMenu.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {return {};},
    methods: function () {
      return {
        'TopMenu': { type: '', declaredBy: 'org.apache.royale.site.TopMenu'}
      };
    }
  };
};

  
  