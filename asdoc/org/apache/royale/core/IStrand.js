/**
 * Generated by Apache Royale Compiler from org\apache\royale\core\IStrand.as
 * org.apache.royale.core.IStrand
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.royale.core.IStrand');




/**
 * @interface
 */
org.apache.royale.core.IStrand = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.core.IStrand', org.apache.royale.core.IStrand);
org.apache.royale.core.IStrand.prototype.addBead = function(bead) {
};
org.apache.royale.core.IStrand.prototype.getBeadByType = function(classOrInterface) {
};
org.apache.royale.core.IStrand.prototype.removeBead = function(bead) {
};


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.core.IStrand.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IStrand', qName: 'org.apache.royale.core.IStrand', kind: 'interface' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.core.IStrand.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {return {};},
    methods: function () {
      return {
        'addBead': { type: 'void', declaredBy: 'org.apache.royale.core.IStrand', parameters: function () { return [  { index: 1, type: 'org.apache.royale.core.IBead', optional: false } ]; }},
        'getBeadByType': { type: 'org.apache.royale.core.IBead', declaredBy: 'org.apache.royale.core.IStrand', parameters: function () { return [  { index: 1, type: 'Class', optional: false } ]; }},
        'removeBead': { type: 'org.apache.royale.core.IBead', declaredBy: 'org.apache.royale.core.IStrand', parameters: function () { return [  { index: 1, type: 'org.apache.royale.core.IBead', optional: false } ]; }}
      };
    }
  };
};