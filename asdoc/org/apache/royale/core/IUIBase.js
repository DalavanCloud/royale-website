/**
 * Generated by Apache Royale Compiler from org\apache\royale\core\IUIBase.as
 * org.apache.royale.core.IUIBase
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.royale.core.IUIBase');

goog.require('org.apache.royale.events.IEventDispatcher');
goog.require('org.apache.royale.core.IChild');
goog.require('org.apache.royale.core.IStrand');



/**
 * @interface
 * @extends {org.apache.royale.core.IStrand}
 * @extends {org.apache.royale.events.IEventDispatcher}
 * @extends {org.apache.royale.core.IChild}
 */
org.apache.royale.core.IUIBase = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.core.IUIBase', org.apache.royale.core.IUIBase);
org.apache.royale.core.IUIBase.prototype.addedToParent = function() {
};
/**  * @type {number}
 */org.apache.royale.core.IUIBase.prototype.alpha;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.core.IUIBase.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'IUIBase', qName: 'org.apache.royale.core.IUIBase', kind: 'interface' }], interfaces: [org.apache.royale.core.IStrand, org.apache.royale.events.IEventDispatcher, org.apache.royale.core.IChild] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.core.IUIBase.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    accessors: function () {
      return {
        'alpha': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.core.IUIBase'},
        'x': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.core.IUIBase'},
        'y': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.core.IUIBase'},
        'width': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.core.IUIBase'},
        'height': { type: 'Number', access: 'readwrite', declaredBy: 'org.apache.royale.core.IUIBase'},
        'visible': { type: 'Boolean', access: 'readwrite', declaredBy: 'org.apache.royale.core.IUIBase'},
        'topMostEventDispatcher': { type: 'org.apache.royale.events.IEventDispatcher', access: 'readonly', declaredBy: 'org.apache.royale.core.IUIBase'},
        'positioner': { type: 'org.apache.royale.core.WrappedHTMLElement', access: 'writeonly', declaredBy: 'org.apache.royale.core.IUIBase'}
      };
    },
    methods: function () {
      return {
        'addedToParent': { type: 'void', declaredBy: 'org.apache.royale.core.IUIBase'}
      };
    }
  };
};