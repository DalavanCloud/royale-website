/**
 * Generated by Apache Royale Compiler from org\apache\royale\html\beads\layouts\LayoutChangeNotifier.as
 * org.apache.royale.html.beads.layouts.LayoutChangeNotifier
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('org.apache.royale.html.beads.layouts.LayoutChangeNotifier');

goog.require('org.apache.royale.core.IBeadView');
goog.require('org.apache.royale.events.Event');
goog.require('org.apache.royale.events.IEventDispatcher');
goog.require('org.apache.royale.core.IBead');
goog.require('org.apache.royale.utils.Language');



/**
 *  constructor.
 *  
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @implements {org.apache.royale.core.IBead}
 */
org.apache.royale.html.beads.layouts.LayoutChangeNotifier = function() {
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('org.apache.royale.html.beads.layouts.LayoutChangeNotifier', org.apache.royale.html.beads.layouts.LayoutChangeNotifier);


/**
 * @private
 * @type {org.apache.royale.core.IStrand}
 */
org.apache.royale.html.beads.layouts.LayoutChangeNotifier.prototype._strand;


/**
 * @private
 * @type {*}
 */
org.apache.royale.html.beads.layouts.LayoutChangeNotifier.prototype._value = undefined;


org.apache.royale.html.beads.layouts.LayoutChangeNotifier.prototype.set__strand = function(value) {
  this._strand = value;
};


org.apache.royale.html.beads.layouts.LayoutChangeNotifier.prototype.set__initialValue = function(value) {
  this._value = value;
};


org.apache.royale.html.beads.layouts.LayoutChangeNotifier.prototype.set__watchedProperty = function(value) {
  if (this._value !== value) {
    this._value = value;
    if (org.apache.royale.utils.Language.is(this._strand, org.apache.royale.core.IBeadView))
      org.apache.royale.utils.Language.as(this._strand, org.apache.royale.core.IBeadView, true).host.dispatchEvent(new org.apache.royale.events.Event("layoutNeeded"));
    else
      org.apache.royale.utils.Language.as(this._strand, org.apache.royale.events.IEventDispatcher, true).dispatchEvent(new org.apache.royale.events.Event("layoutNeeded"));
  }
};


Object.defineProperties(org.apache.royale.html.beads.layouts.LayoutChangeNotifier.prototype, /** @lends {org.apache.royale.html.beads.layouts.LayoutChangeNotifier.prototype} */ {
/**
  * @export
  * @type {org.apache.royale.core.IStrand} */
strand: {
set: org.apache.royale.html.beads.layouts.LayoutChangeNotifier.prototype.set__strand},
/**
  * @export
  * @type {Object} */
initialValue: {
set: org.apache.royale.html.beads.layouts.LayoutChangeNotifier.prototype.set__initialValue},
/**
  * @export
  * @type {Object} */
watchedProperty: {
set: org.apache.royale.html.beads.layouts.LayoutChangeNotifier.prototype.set__watchedProperty}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
org.apache.royale.html.beads.layouts.LayoutChangeNotifier.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'LayoutChangeNotifier', qName: 'org.apache.royale.html.beads.layouts.LayoutChangeNotifier', kind: 'class' }], interfaces: [org.apache.royale.core.IBead] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
org.apache.royale.html.beads.layouts.LayoutChangeNotifier.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'strand': { type: 'org.apache.royale.core.IStrand', access: 'writeonly', declaredBy: 'org.apache.royale.html.beads.layouts.LayoutChangeNotifier'},
        'initialValue': { type: 'Object', access: 'writeonly', declaredBy: 'org.apache.royale.html.beads.layouts.LayoutChangeNotifier'},
        'watchedProperty': { type: 'Object', access: 'writeonly', declaredBy: 'org.apache.royale.html.beads.layouts.LayoutChangeNotifier'}
      };
    },
    methods: function () {
      return {
        'LayoutChangeNotifier': { type: '', declaredBy: 'org.apache.royale.html.beads.layouts.LayoutChangeNotifier'}
      };
    }
  };
};