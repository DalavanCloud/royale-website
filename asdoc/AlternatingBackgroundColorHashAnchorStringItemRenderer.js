/**
 * Generated by Apache Royale Compiler from AlternatingBackgroundColorHashAnchorStringItemRenderer.as
 * AlternatingBackgroundColorHashAnchorStringItemRenderer
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('AlternatingBackgroundColorHashAnchorStringItemRenderer');

goog.require('HashAnchorStringItemRenderer');



/**
 *  constructor.
 *
 *  @langversion 3.0
 *  @playerversion Flash 10.2
 *  @playerversion AIR 2.6
 *  @productversion Royale 0.0
 * @constructor
 * @extends {HashAnchorStringItemRenderer}
 */
AlternatingBackgroundColorHashAnchorStringItemRenderer = function() {
  AlternatingBackgroundColorHashAnchorStringItemRenderer.base(this, 'constructor');
};
goog.inherits(AlternatingBackgroundColorHashAnchorStringItemRenderer, HashAnchorStringItemRenderer);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('AlternatingBackgroundColorHashAnchorStringItemRenderer', AlternatingBackgroundColorHashAnchorStringItemRenderer);


/**
 * @private
 * @type {string}
 */
AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype._color0;


/**
 * @private
 * @type {string}
 */
AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype._color1;


/**
 * @private
 * @type {boolean}
 */
AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype.oddIndex;


/**
 * @export
 * @override
 */
AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype.addedToParent = function() {
  AlternatingBackgroundColorHashAnchorStringItemRenderer.superClass_.addedToParent.apply(this);
  var /** @type {number} */ index = this.parent.getElementIndex(this);
  this.oddIndex = ((index % 2) == 1);
  this.element.style.backgroundColor = this.oddIndex ? this._color1 : this._color0;
};


/**
 * @asprivate
 * @export
 * @override
 */
AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype.updateRenderer = function() {
  AlternatingBackgroundColorHashAnchorStringItemRenderer.superClass_.updateRenderer.apply(this);
  if (this.element.style.backgroundColor == null || this.element.style.backgroundColor == "")
    this.element.style.backgroundColor = this.oddIndex ? this._color1 : this._color0;
};


AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype.get__backgroundColor0 = function() {
  return this._color0;
};


AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype.set__backgroundColor0 = function(value) {
  this._color0 = value;
};


AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype.get__backgroundColor1 = function() {
  return this._color1;
};


AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype.set__backgroundColor1 = function(value) {
  this._color1 = value;
};


Object.defineProperties(AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype, /** @lends {AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype} */ {
/**
  * @export
  * @type {string} */
backgroundColor0: {
get: AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype.get__backgroundColor0,
set: AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype.set__backgroundColor0},
/**
  * @export
  * @type {string} */
backgroundColor1: {
get: AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype.get__backgroundColor1,
set: AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype.set__backgroundColor1}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'AlternatingBackgroundColorHashAnchorStringItemRenderer', qName: 'AlternatingBackgroundColorHashAnchorStringItemRenderer', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
AlternatingBackgroundColorHashAnchorStringItemRenderer.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {return {};},
    accessors: function () {
      return {
        'backgroundColor0': { type: 'String', access: 'readwrite', declaredBy: 'AlternatingBackgroundColorHashAnchorStringItemRenderer'},
        'backgroundColor1': { type: 'String', access: 'readwrite', declaredBy: 'AlternatingBackgroundColorHashAnchorStringItemRenderer'}
      };
    },
    methods: function () {
      return {
        'AlternatingBackgroundColorHashAnchorStringItemRenderer': { type: '', declaredBy: 'AlternatingBackgroundColorHashAnchorStringItemRenderer'},
        'addedToParent': { type: 'void', declaredBy: 'AlternatingBackgroundColorHashAnchorStringItemRenderer'},
        'updateRenderer': { type: 'void', declaredBy: 'AlternatingBackgroundColorHashAnchorStringItemRenderer'}
      };
    }
  };
};