/**
 * Generated by Apache Royale Compiler from valueObjects\DataVO.as
 * valueObjects.DataVO
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('valueObjects.DataVO');



/**
 * @constructor
 * @param {Object} params
 */
valueObjects.DataVO = function(params) {
  this.baseClassname = org.apache.royale.utils.Language.string(params["baseClassname"] || "");
  if (params["baseInterfaceNames"])
    this.baseInterfaceNames = params["baseInterfaceNames"];
  if (params["events"])
    this.events = params["events"];
  if (params["members"])
    this.members = params["members"];
  this.qname = org.apache.royale.utils.Language.string(params["qname"] || "");
  if (params["tags"])
    this.tags = params["tags"];
  this.type = org.apache.royale.utils.Language.string(params["type"] || "");
};


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('valueObjects.DataVO', valueObjects.DataVO);


/**
 * @export
 * @type {string}
 */
valueObjects.DataVO.prototype.baseClassname;


/**
 * @export
 * @type {Array}
 */
valueObjects.DataVO.prototype.baseInterfaceNames;


/**
 * @export
 * @type {Array}
 */
valueObjects.DataVO.prototype.events;


/**
 * @export
 * @type {Array}
 */
valueObjects.DataVO.prototype.members;


/**
 * @export
 * @type {string}
 */
valueObjects.DataVO.prototype.qname;


/**
 * @export
 * @type {Array}
 */
valueObjects.DataVO.prototype.tags;


/**
 * @export
 * @type {string}
 */
valueObjects.DataVO.prototype.type;


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
valueObjects.DataVO.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'DataVO', qName: 'valueObjects.DataVO', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
valueObjects.DataVO.prototype.ROYALE_REFLECTION_INFO = function () {
  return {
    variables: function () {
      return {
        'baseClassname': { type: 'String'},
        'baseInterfaceNames': { type: 'Array'},
        'events': { type: 'Array'},
        'members': { type: 'Array'},
        'qname': { type: 'String'},
        'tags': { type: 'Array'},
        'type': { type: 'String'}
      };
    },
    accessors: function () {return {};},
    methods: function () {
      return {
        'DataVO': { type: '', declaredBy: 'valueObjects.DataVO', parameters: function () { return [  { index: 1, type: 'Object', optional: false } ]; }}
      };
    }
  };
};