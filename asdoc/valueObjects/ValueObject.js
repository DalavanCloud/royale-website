/**
 * Generated by Apache Royale Compiler from valueObjects\ValueObject.as
 * valueObjects.ValueObject
 *
 * @fileoverview
 *
 * @suppress {checkTypes|accessControls}
 */

goog.provide('valueObjects.ValueObject');

goog.require('org.apache.royale.events.EventDispatcher');
goog.require('org.apache.royale.events.ValueChangeEvent');



/**
 * @constructor
 * @extends {org.apache.royale.events.EventDispatcher}
 */
valueObjects.ValueObject = function() {// Compiler generated Binding support implementation:
valueObjects.ValueObject.base(this, 'constructor');

};
// Compiler generated Binding support implementation:
goog.inherits(valueObjects.ValueObject, org.apache.royale.events.EventDispatcher);


/**
 * Prevent renaming of class. Needed for reflection.
 */
goog.exportSymbol('valueObjects.ValueObject', valueObjects.ValueObject);


/**
 * @export
 * @type {string}
 */
valueObjects.ValueObject.prototype.qname_;


/**
 * @export
 * @type {string}
 */
valueObjects.ValueObject.prototype.shortDescription_;


/**
 * @export
 * @type {string}
 */
valueObjects.ValueObject.prototype.description_;


/**
 * @export
 * @type {string}
 */
valueObjects.ValueObject.prototype.return_;


/**
 * @export
 * @type {string}
 */
valueObjects.ValueObject.prototype.returnhref_;


/**
 * @export
 * @type {Array}
 */
valueObjects.ValueObject.prototype.attributes_;


/**
 * @export
 * @type {Array}
 */
valueObjects.ValueObject.prototype.params_;


/**
 * @export
 * @type {string}
 */
valueObjects.ValueObject.prototype.type_;


/**
 * @export
 * @type {string}
 */
valueObjects.ValueObject.prototype.typehref_;


/**
 * @export
 * @type {string}
 */
valueObjects.ValueObject.prototype.ownerhref_;Object.defineProperties(valueObjects.ValueObject.prototype, /** @lends {valueObjects.ValueObject.prototype} */ {
/** @export
  * @type {Array} */
attributes: {
/** @this {valueObjects.ValueObject} */
get: function() {
return this.attributes_;
},

/** @this {valueObjects.ValueObject} */
set: function(value) {
if (value != this.attributes_) {
    var oldValue = this.attributes_;
    this.attributes_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "attributes", oldValue, value));
}
}},/** @export
  * @type {string} */
description: {
/** @this {valueObjects.ValueObject} */
get: function() {
return this.description_;
},

/** @this {valueObjects.ValueObject} */
set: function(value) {
if (value != this.description_) {
    var oldValue = this.description_;
    this.description_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "description", oldValue, value));
}
}},/** @export
  * @type {string} */
ownerhref: {
/** @this {valueObjects.ValueObject} */
get: function() {
return this.ownerhref_;
},

/** @this {valueObjects.ValueObject} */
set: function(value) {
if (value != this.ownerhref_) {
    var oldValue = this.ownerhref_;
    this.ownerhref_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "ownerhref", oldValue, value));
}
}},/** @export
  * @type {Array} */
params: {
/** @this {valueObjects.ValueObject} */
get: function() {
return this.params_;
},

/** @this {valueObjects.ValueObject} */
set: function(value) {
if (value != this.params_) {
    var oldValue = this.params_;
    this.params_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "params", oldValue, value));
}
}},/** @export
  * @type {string} */
qname: {
/** @this {valueObjects.ValueObject} */
get: function() {
return this.qname_;
},

/** @this {valueObjects.ValueObject} */
set: function(value) {
if (value != this.qname_) {
    var oldValue = this.qname_;
    this.qname_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "qname", oldValue, value));
}
}},/** @export
  * @type {string} */
return: {
/** @this {valueObjects.ValueObject} */
get: function() {
return this.return_;
},

/** @this {valueObjects.ValueObject} */
set: function(value) {
if (value != this.return_) {
    var oldValue = this.return_;
    this.return_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "return", oldValue, value));
}
}},/** @export
  * @type {string} */
returnhref: {
/** @this {valueObjects.ValueObject} */
get: function() {
return this.returnhref_;
},

/** @this {valueObjects.ValueObject} */
set: function(value) {
if (value != this.returnhref_) {
    var oldValue = this.returnhref_;
    this.returnhref_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "returnhref", oldValue, value));
}
}},/** @export
  * @type {string} */
shortDescription: {
/** @this {valueObjects.ValueObject} */
get: function() {
return this.shortDescription_;
},

/** @this {valueObjects.ValueObject} */
set: function(value) {
if (value != this.shortDescription_) {
    var oldValue = this.shortDescription_;
    this.shortDescription_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "shortDescription", oldValue, value));
}
}},/** @export
  * @type {string} */
type: {
/** @this {valueObjects.ValueObject} */
get: function() {
return this.type_;
},

/** @this {valueObjects.ValueObject} */
set: function(value) {
if (value != this.type_) {
    var oldValue = this.type_;
    this.type_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "type", oldValue, value));
}
}},/** @export
  * @type {string} */
typehref: {
/** @this {valueObjects.ValueObject} */
get: function() {
return this.typehref_;
},

/** @this {valueObjects.ValueObject} */
set: function(value) {
if (value != this.typehref_) {
    var oldValue = this.typehref_;
    this.typehref_ = value;
    this.dispatchEvent(org.apache.royale.events.ValueChangeEvent.createUpdateEvent(
         this, "typehref", oldValue, value));
}
}}}
);


/**
 * Metadata
 *
 * @type {Object.<string, Array.<Object>>}
 */
valueObjects.ValueObject.prototype.ROYALE_CLASS_INFO = { names: [{ name: 'ValueObject', qName: 'valueObjects.ValueObject', kind: 'class' }] };



/**
 * Reflection
 *
 * @return {Object.<string, Function>}
 */
valueObjects.ValueObject.prototype.ROYALE_REFLECTION_INFO = function () {
return {
  variables: function () {return {};},
  accessors: function () {
    return {
      'qname': { type: 'String', access: 'readwrite', declaredBy: 'valueObjects.ValueObject'},
      'shortDescription': { type: 'String', access: 'readwrite', declaredBy: 'valueObjects.ValueObject'},
      'description': { type: 'String', access: 'readwrite', declaredBy: 'valueObjects.ValueObject'},
      'return': { type: 'String', access: 'readwrite', declaredBy: 'valueObjects.ValueObject'},
      'returnhref': { type: 'String', access: 'readwrite', declaredBy: 'valueObjects.ValueObject'},
      'attributes': { type: 'Array', access: 'readwrite', declaredBy: 'valueObjects.ValueObject'},
      'params': { type: 'Array', access: 'readwrite', declaredBy: 'valueObjects.ValueObject'},
      'type': { type: 'String', access: 'readwrite', declaredBy: 'valueObjects.ValueObject'},
      'typehref': { type: 'String', access: 'readwrite', declaredBy: 'valueObjects.ValueObject'},
      'ownerhref': { type: 'String', access: 'readwrite', declaredBy: 'valueObjects.ValueObject'}
    };
  },
  methods: function () {return {};},
  metadata: function () { return [  ]; }
};
};